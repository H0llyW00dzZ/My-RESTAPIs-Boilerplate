// Copyright (c) 2024 H0llyW00dz All rights reserved.
//
// By accessing or using this software, you agree to be bound by the terms
// of the License Agreement, which you can find at LICENSE files.

package site

type Component struct {
	Title      string
	Cfheader   string
	XRequestID string
	CspRandom  string
	TimeYears  string
	AppName    string
}

templ (c Component) Head() {
	<head>
		<meta charset="utf-8"/>
		<meta name="viewport" content="width=device-width, initial-scale=1"/>
		<meta name="msapplication-TileColor" content="#da532c"/>
		<meta name="theme-color" content="#2596BE"/>
		<meta name="description" content="Witness the elegance and efficiency of web development with Go and HTMX. This website, purely written in Go and powered by HTMX's dynamic interactions, showcases how the combination of Go's simplicity and performance creates a seamless and engaging user experience."/>
		<meta name="htmx-config" content='{"code": ".*", "swap": true }'/>
		@subHead()
		// TODO: Enhance CSS/JS delivery by implementing a system that generates unique filenames based on UUIDs or cryptographic hashes.
		// When a client visits the website, they would receive CSS/JS files with names like "randomuuid.css" or "hash.js", where the randomuuid or hash portion is secure dynamically generated.
		// This unique identifier could be associated with client-specific information like IP address, User-Agent, and other relevant factors.
		<link rel="stylesheet" href="/styles/css/raw.css"/>
		// Note: It's important to include a nonce when adding JavaScript. Without a nonce, the browser will consider it suspicious.
		<script src="/styles/js/htmx.min.js" nonce={ c.CspRandom }></script>
		<script src="https://unpkg.com/htmx-ext-response-targets@2.0.0/response-targets.js" nonce={ c.CspRandom }></script>
		@cSS()
		<title>{ c.Title }</title>
	</head>
}

var onceCSS = templ.NewOnceHandle()

templ cSS() {
	@onceCSS.Once() {
		// Note: This safe & secure as well which it's already bound into CSP smiliar HTMX.
		<link rel="stylesheet" href="/styles/css/base-tailwind.css"/>
	}
}

var onceIcon = templ.NewOnceHandle()

templ subHead() {
	@onceIcon.Once() {
		<link rel="apple-touch-icon" sizes="180x180" href="/styles/images/apple-touch-icon.png"/>
		<link rel="icon" type="image/png" sizes="32x32" href="/styles/images/favicon-32x32.png"/>
		<link rel="icon" type="image/png" sizes="16x16" href="/styles/images/favicon-16x16.png"/>
		<link rel="mask-icon" href="/styles/images/safari-pinned-tab.svg" color="#5bbad5"/>
		<link rel="manifest" href="/styles/images/site.webmanifest"/>
	}
}
