apiVersion: karpenter.sh/v1
kind: NodePool
metadata:
  # Note: Don't forget to modify this as it's just an example.
  name: arena-high-performance-pool
spec:
  template:
    metadata:
      labels:
        # Note: Don't forget to modify this as it's just an example.
        billing-team: arena-high-performance-pool
    spec:
      nodeClassRef:
        group: eks.amazonaws.com
        kind: NodeClass
        # Note: Don't forget to modify this as it's just an example.
        name: arena-high-performance-pool
      requirements:
        - key: "karpenter.sh/capacity-type"
          operator: In
          # Note: If you get spot instances when EKS Auto Provisioning nodes, consider yourself lucky. Personally, all of my node pools use spot instances, which saves a lot of cost.
          values: ["spot", "on-demand"]
          # Note: The instance category and family will depend on the characteristics of the deployment/workloads.
          # For example, if the characteristics of the deployment (these REST APIs) are only focusing on CPU due to its concurrency and networking requirements,
          # it will automatically use the specifications of instances optimized for CPU and network performance, which can significantly save costs, unlike standard/static nodes.
        - key: "eks.amazonaws.com/instance-category"
          operator: In
          values: ["c", "m", "r", "t"]
          minValues: 1
        - key: "eks.amazonaws.com/instance-family"
          operator: In
          values: ["m5", "m5d", "m5n", "c5", "c5d", "c5n", "r5", "r5d", "r5n", "t3a", "m6i", "c6i"]
          minValues: 1
        - key: "eks.amazonaws.com/instance-cpu"
          operator: In
          values: ["1", "2", "4", "8", "16", "32"]  # Added "1" for minimum CPU
          # Note: This is suitable for io1 and io2.
        - key: "eks.amazonaws.com/instance-hypervisor"
          operator: In
          values: ["nitro"]
        - key: "topology.kubernetes.io/zone"
          operator: In
          # Note: Don't forget to modify this as it's just an example.
          values: ["region-1a", "region-1b", "region-1c"]
        - key: "kubernetes.io/arch"
          operator: In
          values: ["amd64"]
      terminationGracePeriod: 30m
  disruption:
    consolidationPolicy: WhenEmptyOrUnderutilized
    # Note: This can reduce downtime by changing the instance spec of the node to one suitable for the deployment/workloads
    consolidateAfter: 24h
    budgets:
      - nodes: 10%
  limits:
    # Note: Don't forget to modify this as it's just an example.
    cpu: "100"
    memory: 100Gi
    weight: 10
