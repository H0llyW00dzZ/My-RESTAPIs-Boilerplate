# REST API Ingress Controller Configuration [Zer0 Downtime] by H0llyW00dzZ for external load balancer that running in K8S.
#
# Important: When using Private CAs, it's recommended to implement an external handler (e.g., Cloudflare).
# Then the external handler should use Public CAs and trust the private CA roots from backend service.
#
# For Cloudflare, refer to:
#  - https://developers.cloudflare.com/ssl/edge-certificates/advanced-certificate-manager/
#  - https://developers.cloudflare.com/ssl/origin-configuration/custom-origin-trust-store/
#  - https://developers.cloudflare.com/ssl/edge-certificates/custom-certificates/
#
# Example architecture:
# Frontend (External Handler, e.g., Cloudflare) -> Backend (This Repo)
#
# Demo:
#  - https://api-beta.btz.pm/ (This Repo, you can see the favicon and X-Connection-Hash (Priv8 Implementation), old site are down due SSL no configured)
#
# Once the frontend and backend are connected, management (e.g, traffic, security, etc) becomes easier through the frontend
# (e.g, don't have to spend time for setup, maintenance traffic, other).
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rest-api-ingress # change this
  annotations:
    kubernetes.io/ingress.class: "nginx"
    # nginx.ingress.kubernetes.io/ssl-passthrough: "true"  # Removed
    nginx.ingress.kubernetes.io/ssl-certificate: "localhost-tls" # change this
    nginx.ingress.kubernetes.io/ssl-certificate-key: "localhost-tls" # change this
    nginx.ingress.kubernetes.io/ssl-protocols: "TLSv1.3"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/auth-tls-pass-certificate-to-upstream: "true"
spec:
  ingressClassName: nginx
  rules:
    - host: localhost # change this
      http:
        paths:
          # Note: This important to enable "CaseSensitive" and "StrictRouting" true in fiber configuration (see cmd/server/run.go)
          # then in middleware don't forget configure a "DomainRouter" in RegisterRoutes (see middleware/routes.go)
          - path: /api/v1/ # change this for rest-apis route
            pathType: Prefix
            backend:
              service:
                name: rest-api-service # change this
                port:
                  number: 8080 # change this
          - path: / # change this for front-end route
            pathType: Prefix
            backend:
              service:
                name: rest-api-service # change this for front-end route
                port:
                  number: 80 # change this
  # Note: TLS are required and it's optional regarding cert, since personally I am using Private CAs
  tls:
    - hosts:
        - localhost # change this
      secretName: localhost-tls # change this
